<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACw
        CAAAAk1TRnQBSQFMAwEBAAEMAQABDAEAARABAAEQAQAE/wEJAQAI/wFCAU0BNgEEBgABNgEEAgABKAMA
        AUADAAEQAwABAQEAAQgGAAEEGAABgAIAAYADAAKAAQABgAMAAYABAAGAAQACgAIAA8ABAAHAAdwBwAEA
        AfABygGmAQABMwUAATMBAAEzAQABMwEAAjMCAAMWAQADHAEAAyIBAAMpAQADVQEAA00BAANCAQADOQEA
        AYABfAH/AQACUAH/AQABkwEAAdYBAAH/AewBzAEAAcYB1gHvAQAB1gLnAQABkAGpAa0CAAH/ATMDAAFm
        AwABmQMAAcwCAAEzAwACMwIAATMBZgIAATMBmQIAATMBzAIAATMB/wIAAWYDAAFmATMCAAJmAgABZgGZ
        AgABZgHMAgABZgH/AgABmQMAAZkBMwIAAZkBZgIAApkCAAGZAcwCAAGZAf8CAAHMAwABzAEzAgABzAFm
        AgABzAGZAgACzAIAAcwB/wIAAf8BZgIAAf8BmQIAAf8BzAEAATMB/wIAAf8BAAEzAQABMwEAAWYBAAEz
        AQABmQEAATMBAAHMAQABMwEAAf8BAAH/ATMCAAMzAQACMwFmAQACMwGZAQACMwHMAQACMwH/AQABMwFm
        AgABMwFmATMBAAEzAmYBAAEzAWYBmQEAATMBZgHMAQABMwFmAf8BAAEzAZkCAAEzAZkBMwEAATMBmQFm
        AQABMwKZAQABMwGZAcwBAAEzAZkB/wEAATMBzAIAATMBzAEzAQABMwHMAWYBAAEzAcwBmQEAATMCzAEA
        ATMBzAH/AQABMwH/ATMBAAEzAf8BZgEAATMB/wGZAQABMwH/AcwBAAEzAv8BAAFmAwABZgEAATMBAAFm
        AQABZgEAAWYBAAGZAQABZgEAAcwBAAFmAQAB/wEAAWYBMwIAAWYCMwEAAWYBMwFmAQABZgEzAZkBAAFm
        ATMBzAEAAWYBMwH/AQACZgIAAmYBMwEAA2YBAAJmAZkBAAJmAcwBAAFmAZkCAAFmAZkBMwEAAWYBmQFm
        AQABZgKZAQABZgGZAcwBAAFmAZkB/wEAAWYBzAIAAWYBzAEzAQABZgHMAZkBAAFmAswBAAFmAcwB/wEA
        AWYB/wIAAWYB/wEzAQABZgH/AZkBAAFmAf8BzAEAAcwBAAH/AQAB/wEAAcwBAAKZAgABmQEzAZkBAAGZ
        AQABmQEAAZkBAAHMAQABmQMAAZkCMwEAAZkBAAFmAQABmQEzAcwBAAGZAQAB/wEAAZkBZgIAAZkBZgEz
        AQABmQEzAWYBAAGZAWYBmQEAAZkBZgHMAQABmQEzAf8BAAKZATMBAAKZAWYBAAOZAQACmQHMAQACmQH/
        AQABmQHMAgABmQHMATMBAAFmAcwBZgEAAZkBzAGZAQABmQLMAQABmQHMAf8BAAGZAf8CAAGZAf8BMwEA
        AZkBzAFmAQABmQH/AZkBAAGZAf8BzAEAAZkC/wEAAcwDAAGZAQABMwEAAcwBAAFmAQABzAEAAZkBAAHM
        AQABzAEAAZkBMwIAAcwCMwEAAcwBMwFmAQABzAEzAZkBAAHMATMBzAEAAcwBMwH/AQABzAFmAgABzAFm
        ATMBAAGZAmYBAAHMAWYBmQEAAcwBZgHMAQABmQFmAf8BAAHMAZkCAAHMAZkBMwEAAcwBmQFmAQABzAKZ
        AQABzAGZAcwBAAHMAZkB/wEAAswCAALMATMBAALMAWYBAALMAZkBAAPMAQACzAH/AQABzAH/AgABzAH/
        ATMBAAGZAf8BZgEAAcwB/wGZAQABzAH/AcwBAAHMAv8BAAHMAQABMwEAAf8BAAFmAQAB/wEAAZkBAAHM
        ATMCAAH/AjMBAAH/ATMBZgEAAf8BMwGZAQAB/wEzAcwBAAH/ATMB/wEAAf8BZgIAAf8BZgEzAQABzAJm
        AQAB/wFmAZkBAAH/AWYBzAEAAcwBZgH/AQAB/wGZAgAB/wGZATMBAAH/AZkBZgEAAf8CmQEAAf8BmQHM
        AQAB/wGZAf8BAAH/AcwCAAH/AcwBMwEAAf8BzAFmAQAB/wHMAZkBAAH/AswBAAH/AcwB/wEAAv8BMwEA
        AcwB/wFmAQAC/wGZAQAC/wHMAQACZgH/AQABZgH/AWYBAAFmAv8BAAH/AmYBAAH/AWYB/wEAAv8BZgEA
        ASEBAAGlAQADXwEAA3cBAAOGAQADlgEAA8sBAAOyAQAD1wEAA90BAAPjAQAD6gEAA/EBAAP4AQAB8AH7
        Af8BAAGkAqABAAOAAwAB/wIAAf8DAAL/AQAB/wMAAf8BAAH/AQAC/wIAA/8BAAEIBHIBmAT/AfQB/wH2
        AZgBcgGYMAABmAFJAUgBSQFyAcIB/wH2Af8C9gH/AQgBSQEoAZgwAAEIAkkBTwGYAXIB/wP2Af8B8wFy
        AScBKAGXMAABCAEoAk8BngFJAQgB9AH/AvQB8wGXAU8BAgGXMAABmAEoAQIBTwEIAcIBSQIIA0kCTwEC
        AZcwAAGYAgIBTwHCARsBSQFxAZgBSALCAZcCAgGXMAABmAICAVABCAEbAZgCTwFJAfMB9AFyAQIBSQGd
        MAABCAFJAQIBUAEIARsBwgFPAkkB9AHCAZcCAgGYMAABCAECAS4BSQFyAUkBnQFIAQIBnQKYAZcCAgGX
        MAABCAICAU8BCAGXAU4BAgFPAcIBSQGYAZcCAgGYMAABmAICAU8BCAHCAUgBJwFJAnIBwgGXAQIBSQGd
        MAABCAEnAQIBTwEIAZgBcgHCAcMB9gH0AcIBcgICAZgwAAEIAUgBSQFPAQgBmAFJAcIBwwH2AfQB8wFy
        AQIBSQGYMAABmAFIAUkBTwEIAcIBmAHCARsB8wH0AfMBlwECAUkBmDAAAQgBSQInBkkBbAFJAicBSQGY
        MAAB9gEbAcMBGwL0AfMC9gH0Af8B9APCAfQwAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUA
        AYAXAAP/gQAL
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAWRXhpZgAATU0AKgAAAAgAAAAAAAD/2wBDAAgGBgcGBQgHBwcJ
        CQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJ
        CQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjL/wAARCABLAGADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
        AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
        JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
        HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
        BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
        VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
        xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDm2017Z4YLiGZ7UyBH
        MJ5COAh2g/dJGBwTk4AHrPDqEek6xMy+eIJJWfy5QzsilQ2SSOmQ2D1IIyBtr0E6ELmEAogB5wW6jofp
        kcE+hNcjLavoOrm23i3sZ18tkWNdznkbB3Yc/dIYYxgcCvAjXU/UmL6HeaNr9mbUHjCfKQVwR9eOD7da
        5rxL4mtYmZF3uxOAsKFjxycc4Dc5xnsD0rl4G1nW5jPokCLAMIxUkgvuYN83rxkBj06elVrLWJJDNGyJ
        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
</value>
  </data>
</root>