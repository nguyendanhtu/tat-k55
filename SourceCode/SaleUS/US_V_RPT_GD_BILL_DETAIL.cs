///************************************************
/// Generated by: UYvq
/// Date: 25/08/2011 03:57:17
/// Goal: Create User Service Class for V_RPT_GD_BILL_DETAIL
///************************************************
/// <summary>
/// Create User Service Class for V_RPT_GD_BILL_DETAIL
/// </summary>

using System;
using SaleDS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;


namespace SaleUS
{
public class US_V_RPT_GD_BILL_DETAIL : US_Object
{
	private const string c_TableName = "V_RPT_GD_BILL_DETAIL";
#region Public Properties
	public decimal dcID 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["ID"] = value;
		}
	}

	public bool IsIDNull()	{
		return pm_objDR.IsNull("ID");
	}

	public void SetIDNull() {
		pm_objDR["ID"] = System.Convert.DBNull;
	}

	public decimal dcBILL_ID 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "BILL_ID", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["BILL_ID"] = value;
		}
	}

	public bool IsBILL_IDNull()	{
		return pm_objDR.IsNull("BILL_ID");
	}

	public void SetBILL_IDNull() {
		pm_objDR["BILL_ID"] = System.Convert.DBNull;
	}

	public decimal dcPRODUCT_ID 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "PRODUCT_ID", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["PRODUCT_ID"] = value;
		}
	}

	public bool IsPRODUCT_IDNull()	{
		return pm_objDR.IsNull("PRODUCT_ID");
	}

	public void SetPRODUCT_IDNull() {
		pm_objDR["PRODUCT_ID"] = System.Convert.DBNull;
	}

	public decimal dcQUANTITY 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "QUANTITY", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["QUANTITY"] = value;
		}
	}

	public bool IsQUANTITYNull()	{
		return pm_objDR.IsNull("QUANTITY");
	}

	public void SetQUANTITYNull() {
		pm_objDR["QUANTITY"] = System.Convert.DBNull;
	}

	public string strBILL_SERI 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "BILL_SERI", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["BILL_SERI"] = value;
		}
	}

	public bool IsBILL_SERINull() 
	{
		return pm_objDR.IsNull("BILL_SERI");
	}

	public void SetBILL_SERINull() {
		pm_objDR["BILL_SERI"] = System.Convert.DBNull;
	}

	public decimal dcCUSTOMER_ID 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "CUSTOMER_ID", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["CUSTOMER_ID"] = value;
		}
	}

	public bool IsCUSTOMER_IDNull()	{
		return pm_objDR.IsNull("CUSTOMER_ID");
	}

	public void SetCUSTOMER_IDNull() {
		pm_objDR["CUSTOMER_ID"] = System.Convert.DBNull;
	}

	public DateTime datBILL_DATE
	{
		get   
		{
			return CNull.RowNVLDate(pm_objDR, "BILL_DATE", IPConstants.c_DefaultDate);
		}
		set   
		{
			pm_objDR["BILL_DATE"] = value;
		}
	}

	public bool IsBILL_DATENull()
	{
		return pm_objDR.IsNull("BILL_DATE");
	}

	public void SetBILL_DATENull()
	{
		pm_objDR["BILL_DATE"] = System.Convert.DBNull;
	}

	public string strCUSTOMER_NAME 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "CUSTOMER_NAME", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["CUSTOMER_NAME"] = value;
		}
	}

	public bool IsCUSTOMER_NAMENull() 
	{
		return pm_objDR.IsNull("CUSTOMER_NAME");
	}

	public void SetCUSTOMER_NAMENull() {
		pm_objDR["CUSTOMER_NAME"] = System.Convert.DBNull;
	}

	public string strPRODUCT_NAME 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "PRODUCT_NAME", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["PRODUCT_NAME"] = value;
		}
	}

	public bool IsPRODUCT_NAMENull() 
	{
		return pm_objDR.IsNull("PRODUCT_NAME");
	}

	public void SetPRODUCT_NAMENull() {
		pm_objDR["PRODUCT_NAME"] = System.Convert.DBNull;
	}

	public string strPRODUCT_CODE 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "PRODUCT_CODE", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["PRODUCT_CODE"] = value;
		}
	}

	public bool IsPRODUCT_CODENull() 
	{
		return pm_objDR.IsNull("PRODUCT_CODE");
	}

	public void SetPRODUCT_CODENull() {
		pm_objDR["PRODUCT_CODE"] = System.Convert.DBNull;
	}

	public string strCATEGORY_NAME 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "CATEGORY_NAME", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["CATEGORY_NAME"] = value;
		}
	}

	public bool IsCATEGORY_NAMENull() 
	{
		return pm_objDR.IsNull("CATEGORY_NAME");
	}

	public void SetCATEGORY_NAMENull() {
		pm_objDR["CATEGORY_NAME"] = System.Convert.DBNull;
	}

	public decimal dcCURRENT_PRICE 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "CURRENT_PRICE", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["CURRENT_PRICE"] = value;
		}
	}

	public bool IsCURRENT_PRICENull()	{
		return pm_objDR.IsNull("CURRENT_PRICE");
	}

	public void SetCURRENT_PRICENull() {
		pm_objDR["CURRENT_PRICE"] = System.Convert.DBNull;
	}

	public decimal dcAMOUNT 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "AMOUNT", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["AMOUNT"] = value;
		}
	}

	public bool IsAMOUNTNull()	{
		return pm_objDR.IsNull("AMOUNT");
	}

	public void SetAMOUNTNull() {
		pm_objDR["AMOUNT"] = System.Convert.DBNull;
	}

#endregion


#region Init Functions
	public US_V_RPT_GD_BILL_DETAIL() 
	{
		pm_objDS = new DS_V_RPT_GD_BILL_DETAIL();
		pm_strTableName = c_TableName;
		pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
	}

	public US_V_RPT_GD_BILL_DETAIL(DataRow i_objDR): this()
	{
		this.DataRow2Me(i_objDR);
	}

	public US_V_RPT_GD_BILL_DETAIL(decimal i_dbID) 
	{
		pm_objDS = new DS_V_RPT_GD_BILL_DETAIL();
		pm_strTableName = c_TableName;
		IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
		v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
		SqlCommand v_cmdSQL;
		v_cmdSQL = v_objMkCmd.getSelectCmd();
		this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
		pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
	}
#endregion
    #region Addtional Methods
    public void FillDataset(DS_V_RPT_GD_BILL_DETAIL op_ds_rpt_gd_bill
    ,decimal ip_dc_product_id
     , DateTime ip_dat_from_date
     , DateTime ip_dat_to_date)
    {
        CStoredProc v_obj_procedure = new CStoredProc("pr_V_RPT_GD_BILL_DETAIL_Select");
        v_obj_procedure.addDecimalInputParam("@ip_dc_product_id", ip_dc_product_id);
        v_obj_procedure.addDatetimeInputParam("@ip_dat_from_dat", ip_dat_from_date);
        v_obj_procedure.addDatetimeInputParam("@ip_dat_to_dat", ip_dat_to_date);
        v_obj_procedure.fillDataSetByCommand(this, op_ds_rpt_gd_bill);
    }


    public void FillDataset2Combo(DS_V_RPT_GD_BILL_DETAIL op_ds_rpt_gd_bill
        ,decimal ip_dc_category_id
     , DateTime ip_dat_from_date
     , DateTime ip_dat_to_date
        )
    {
        CStoredProc v_obj_procedure = new CStoredProc("pr_V_RPT_GD_BILL_DETAIL_Select_Group");
        v_obj_procedure.addDecimalInputParam("@ip_dc_category_id", ip_dc_category_id);
        v_obj_procedure.addDatetimeInputParam("@ip_dat_from_dat", ip_dat_from_date);
        v_obj_procedure.addDatetimeInputParam("@ip_dat_to_dat", ip_dat_to_date);
        v_obj_procedure.fillDataSetByCommand(this, op_ds_rpt_gd_bill);
    }

    #endregion



  }
}
