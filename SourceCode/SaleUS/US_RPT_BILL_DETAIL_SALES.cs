///************************************************
/// Generated by: tund
/// Date: 26/08/2011 03:08:20
/// Goal: Create User Service Class for RPT_BILL_DETAIL_SALES
///************************************************
/// <summary>
/// Create User Service Class for RPT_BILL_DETAIL_SALES
/// </summary>

using System; 
using SaleDS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;



namespace SaleUS
{
    public class US_RPT_BILL_DETAIL_SALES : US_Object 
    {
        private const string c_TableName = "RPT_BILL_DETAIL_SALES";
        #region Public Properties
        public decimal dcID
        {
            get
            {
                return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
            }
            set
            {
                pm_objDR["ID"] = value;
            }
        }

        public bool IsIDNull()
        {
            return pm_objDR.IsNull("ID");
        }

        public void SetIDNull()
        {
            pm_objDR["ID"] = System.Convert.DBNull;
        }

        public string strBILL_SERI
        {
            get
            {
                return CNull.RowNVLString(pm_objDR, "BILL_SERI", IPConstants.c_DefaultString);
            }
            set
            {
                pm_objDR["BILL_SERI"] = value;
            }
        }

        public bool IsBILL_SERINull()
        {
            return pm_objDR.IsNull("BILL_SERI");
        }

        public void SetBILL_SERINull()
        {
            pm_objDR["BILL_SERI"] = System.Convert.DBNull;
        }

        public decimal dcPRODUCT_ID
        {
            get
            {
                return CNull.RowNVLDecimal(pm_objDR, "PRODUCT_ID", IPConstants.c_DefaultDecimal);
            }
            set
            {
                pm_objDR["PRODUCT_ID"] = value;
            }
        }

        public bool IsPRODUCT_IDNull()
        {
            return pm_objDR.IsNull("PRODUCT_ID");
        }

        public void SetPRODUCT_IDNull()
        {
            pm_objDR["PRODUCT_ID"] = System.Convert.DBNull;
        }

        public string strPRODUCT_CODE
        {
            get
            {
                return CNull.RowNVLString(pm_objDR, "PRODUCT_CODE", IPConstants.c_DefaultString);
            }
            set
            {
                pm_objDR["PRODUCT_CODE"] = value;
            }
        }

        public bool IsPRODUCT_CODENull()
        {
            return pm_objDR.IsNull("PRODUCT_CODE");
        }

        public void SetPRODUCT_CODENull()
        {
            pm_objDR["PRODUCT_CODE"] = System.Convert.DBNull;
        }

        public string strPRODUCT_NAME
        {
            get
            {
                return CNull.RowNVLString(pm_objDR, "PRODUCT_NAME", IPConstants.c_DefaultString);
            }
            set
            {
                pm_objDR["PRODUCT_NAME"] = value;
            }
        }

        public bool IsPRODUCT_NAMENull()
        {
            return pm_objDR.IsNull("PRODUCT_NAME");
        }

        public void SetPRODUCT_NAMENull()
        {
            pm_objDR["PRODUCT_NAME"] = System.Convert.DBNull;
        }

        public decimal dcQUANTITY
        {
            get
            {
                return CNull.RowNVLDecimal(pm_objDR, "QUANTITY", IPConstants.c_DefaultDecimal);
            }
            set
            {
                pm_objDR["QUANTITY"] = value;
            }
        }

        public bool IsQUANTITYNull()
        {
            return pm_objDR.IsNull("QUANTITY");
        }

        public void SetQUANTITYNull()
        {
            pm_objDR["QUANTITY"] = System.Convert.DBNull;
        }

        public decimal dcUNIT_PRICE
        {
            get
            {
                return CNull.RowNVLDecimal(pm_objDR, "UNIT_PRICE", IPConstants.c_DefaultDecimal);
            }
            set
            {
                pm_objDR["UNIT_PRICE"] = value;
            }
        }

        public bool IsUNIT_PRICENull()
        {
            return pm_objDR.IsNull("UNIT_PRICE");
        }

        public void SetUNIT_PRICENull()
        {
            pm_objDR["UNIT_PRICE"] = System.Convert.DBNull;
        }

        public decimal dcAMMOUNT
        {
            get
            {
                return CNull.RowNVLDecimal(pm_objDR, "AMMOUNT", IPConstants.c_DefaultDecimal);
            }
            set
            {
                pm_objDR["AMMOUNT"] = value;
            }
        }

        public bool IsAMMOUNTNull()
        {
            return pm_objDR.IsNull("AMMOUNT");
        }

        public void SetAMMOUNTNull()
        {
            pm_objDR["AMMOUNT"] = System.Convert.DBNull;
        }

        public DateTime datBILL_DATE
        {
            get
            {
                return CNull.RowNVLDate(pm_objDR, "BILL_DATE", IPConstants.c_DefaultDate);
            }
            set
            {
                pm_objDR["BILL_DATE"] = value;
            }
        }

        public bool IsBILL_DATENull()
        {
            return pm_objDR.IsNull("BILL_DATE");
        }

        public void SetBILL_DATENull()
        {
            pm_objDR["BILL_DATE"] = System.Convert.DBNull;
        }

        public decimal dcTAX_RATE
        {
            get
            {
                return CNull.RowNVLDecimal(pm_objDR, "TAX_RATE", IPConstants.c_DefaultDecimal);
            }
            set
            {
                pm_objDR["TAX_RATE"] = value;
            }
        }

        public bool IsTAX_RATENull()
        {
            return pm_objDR.IsNull("TAX_RATE");
        }

        public void SetTAX_RATENull()
        {
            pm_objDR["TAX_RATE"] = System.Convert.DBNull;
        }

        public decimal dcUSER_ID
        {
            get
            {
                return CNull.RowNVLDecimal(pm_objDR, "USER_ID", IPConstants.c_DefaultDecimal);
            }
            set
            {
                pm_objDR["USER_ID"] = value;
            }
        }

        public bool IsUSER_IDNull()
        {
            return pm_objDR.IsNull("USER_ID");
        }

        public void SetUSER_IDNull()
        {
            pm_objDR["USER_ID"] = System.Convert.DBNull;
        }

        public decimal dcCUSTOMER_ID
        {
            get
            {
                return CNull.RowNVLDecimal(pm_objDR, "CUSTOMER_ID", IPConstants.c_DefaultDecimal);
            }
            set
            {
                pm_objDR["CUSTOMER_ID"] = value;
            }
        }

        public bool IsCUSTOMER_IDNull()
        {
            return pm_objDR.IsNull("CUSTOMER_ID");
        }

        public void SetCUSTOMER_IDNull()
        {
            pm_objDR["CUSTOMER_ID"] = System.Convert.DBNull;
        }

        public decimal dcREPOSITORY_ID
        {
            get
            {
                return CNull.RowNVLDecimal(pm_objDR, "REPOSITORY_ID", IPConstants.c_DefaultDecimal);
            }
            set
            {
                pm_objDR["REPOSITORY_ID"] = value;
            }
        }

        public bool IsREPOSITORY_IDNull()
        {
            return pm_objDR.IsNull("REPOSITORY_ID");
        }

        public void SetREPOSITORY_IDNull()
        {
            pm_objDR["REPOSITORY_ID"] = System.Convert.DBNull;
        }

        #endregion


        #region Init Functions
        public US_RPT_BILL_DETAIL_SALES()
        {
            pm_objDS = new DS_RPT_BILL_DETAIL_SALES();
            pm_strTableName = c_TableName;
            pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
        }

        public US_RPT_BILL_DETAIL_SALES(DataRow i_objDR)
            : this()
        {
            this.DataRow2Me(i_objDR);
        }

        public US_RPT_BILL_DETAIL_SALES(decimal i_dbID)
        {
            pm_objDS = new DS_RPT_BILL_DETAIL_SALES();
            pm_strTableName = c_TableName;
            IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
            v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
            SqlCommand v_cmdSQL;
            v_cmdSQL = v_objMkCmd.getSelectCmd();
            this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
            pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
        }
        #endregion


        #region Addition
        public void FillDataset(DS_RPT_BILL_DETAIL_SALES op_ds_rpt_bill_detail_sales
            , decimal ip_repository_id
            , DateTime ip_date_current)
        {
            CStoredProc v_obj_procedure = new CStoredProc("pr_RPT_BILL_DETAIL_SALES_Select");
            v_obj_procedure.addDecimalInputParam("@repository_id", ip_repository_id);
            v_obj_procedure.addDatetimeInputParam("@date_cur", ip_date_current);

            v_obj_procedure.fillDataSetByCommand(this, op_ds_rpt_bill_detail_sales);
        }
        #endregion


    }
}
