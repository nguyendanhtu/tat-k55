///************************************************
/// Generated by: tund
/// Date: 23/08/2011 03:41:23
/// Goal: Create User Service Class for GD_BILL
///************************************************
/// <summary>
/// Create User Service Class for GD_BILL
/// </summary>


using SaleDS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;
using System;


namespace SaleUS
{
public class US_GD_BILL : US_Object
{
	private const string c_TableName = "GD_BILL";
#region Public Properties
	public decimal dcID 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["ID"] = value;
		}
	}

	public bool IsIDNull()	{
		return pm_objDR.IsNull("ID");
	}

	public void SetIDNull() {
		pm_objDR["ID"] = System.Convert.DBNull;
	}

	public string strBILL_SERI 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "BILL_SERI", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["BILL_SERI"] = value;
		}
	}

	public bool IsBILL_SERINull() 
	{
		return pm_objDR.IsNull("BILL_SERI");
	}

	public void SetBILL_SERINull() {
		pm_objDR["BILL_SERI"] = System.Convert.DBNull;
	}

	public decimal dcCUSTOMER_ID 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "CUSTOMER_ID", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["CUSTOMER_ID"] = value;
		}
	}

	public bool IsCUSTOMER_IDNull()	{
		return pm_objDR.IsNull("CUSTOMER_ID");
	}

	public void SetCUSTOMER_IDNull() {
		pm_objDR["CUSTOMER_ID"] = System.Convert.DBNull;
	}

    public DateTime datBILL_DATE
    {
        get
        {
            return CNull.RowNVLDate(pm_objDR, "BILL_DATE", IPConstants.c_DefaultDate);
        }
        set
        {
            pm_objDR["BILL_DATE"] = value;
        }
    }

	public bool IsBILL_DATENull()
	{
		return pm_objDR.IsNull("BILL_DATE");
	}

	public void SetBILL_DATENull()
	{
		pm_objDR["BILL_DATE"] = System.Convert.DBNull;
	}

	public decimal dcTAX_RATE 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "TAX_RATE", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["TAX_RATE"] = value;
		}
	}

	public bool IsTAX_RATENull()	{
		return pm_objDR.IsNull("TAX_RATE");
	}

	public void SetTAX_RATENull() {
		pm_objDR["TAX_RATE"] = System.Convert.DBNull;
	}

	public decimal dcAMMOUNT 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "AMMOUNT", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["AMMOUNT"] = value;
		}
	}

	public bool IsAMMOUNTNull()	{
		return pm_objDR.IsNull("AMMOUNT");
	}

	public void SetAMMOUNTNull() {
		pm_objDR["AMMOUNT"] = System.Convert.DBNull;
	}

	public decimal dcUSER_ID 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "USER_ID", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["USER_ID"] = value;
		}
	}

	public bool IsUSER_IDNull()	{
		return pm_objDR.IsNull("USER_ID");
	}

	public void SetUSER_IDNull() {
		pm_objDR["USER_ID"] = System.Convert.DBNull;
	}

#endregion


#region Init Functions
	public US_GD_BILL() 
	{
		pm_objDS = new DS_GD_BILL();
		pm_strTableName = c_TableName;
		pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
	}

	public US_GD_BILL(DataRow i_objDR): this()
	{
		this.DataRow2Me(i_objDR);
	}

	public US_GD_BILL(decimal i_dbID) 
	{
		pm_objDS = new DS_GD_BILL();
		pm_strTableName = c_TableName;
		IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
		v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
		SqlCommand v_cmdSQL;
		v_cmdSQL = v_objMkCmd.getSelectCmd();
		this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
		pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
	}
#endregion


  }
}
