///************************************************
/// Generated by: linhdh
/// Date: 30/08/2011 02:33:51
/// Goal: Create User Service Class for GD_DELIVERY_ORDER
///************************************************
/// <summary>
/// Create User Service Class for GD_DELIVERY_ORDER
/// </summary>

using System;
using SaleDS;
using Sale.CDBNames;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;


namespace SaleUS
{
public class US_GD_DELIVERY_ORDER : US_Object
{
	private const string c_TableName = "GD_DELIVERY_ORDER";
#region Public Properties
	public decimal dcID 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["ID"] = value;
		}
	}

	public bool IsIDNull()	{
		return pm_objDR.IsNull("ID");
	}

	public void SetIDNull() {
		pm_objDR["ID"] = System.Convert.DBNull;
	}

	public string strDELIVERY_ORDER_CODE 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "DELIVERY_ORDER_CODE", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["DELIVERY_ORDER_CODE"] = value;
		}
	}

	public bool IsDELIVERY_ORDER_CODENull() 
	{
		return pm_objDR.IsNull("DELIVERY_ORDER_CODE");
	}

	public void SetDELIVERY_ORDER_CODENull() {
		pm_objDR["DELIVERY_ORDER_CODE"] = System.Convert.DBNull;
	}

	public DateTime datDELIVERY_ORDER_DATE
	{
		get   
		{
			return CNull.RowNVLDate(pm_objDR, "DELIVERY_ORDER_DATE", IPConstants.c_DefaultDate);
		}
		set   
		{
			pm_objDR["DELIVERY_ORDER_DATE"] = value;
		}
	}

	public bool IsDELIVERY_ORDER_DATENull()
	{
		return pm_objDR.IsNull("DELIVERY_ORDER_DATE");
	}

	public void SetDELIVERY_ORDER_DATENull()
	{
		pm_objDR["DELIVERY_ORDER_DATE"] = System.Convert.DBNull;
	}

	public decimal dcREPOSITORY_ID 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "REPOSITORY_ID", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["REPOSITORY_ID"] = value;
		}
	}

	public bool IsREPOSITORY_IDNull()	{
		return pm_objDR.IsNull("REPOSITORY_ID");
	}

	public void SetREPOSITORY_IDNull() {
		pm_objDR["REPOSITORY_ID"] = System.Convert.DBNull;
	}

	public decimal dcUSER_ID 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "USER_ID", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["USER_ID"] = value;
		}
	}

	public bool IsUSER_IDNull()	{
		return pm_objDR.IsNull("USER_ID");
	}

	public void SetUSER_IDNull() {
		pm_objDR["USER_ID"] = System.Convert.DBNull;
	}

	public decimal dcCUSTOMER_ID 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "CUSTOMER_ID", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["CUSTOMER_ID"] = value;
		}
	}

	public bool IsCUSTOMER_IDNull()	{
		return pm_objDR.IsNull("CUSTOMER_ID");
	}

	public void SetCUSTOMER_IDNull() {
		pm_objDR["CUSTOMER_ID"] = System.Convert.DBNull;
	}

    public string strIN_OUT_YN
    {
        get
        {
            return CNull.RowNVLString(pm_objDR, "IN_OUT_YN", IPConstants.c_DefaultString);
        }
        set
        {
            pm_objDR["IN_OUT_YN"] = value;
        }
    }

    public bool IsIN_OUT_YNNull()
    {
        return pm_objDR.IsNull("IN_OUT_YN");
    }

    public void SetIN_OUT_YNNull()
    {
        pm_objDR["IN_OUT_YN"] = System.Convert.DBNull;
    }

#endregion


#region Init Functions
	public US_GD_DELIVERY_ORDER() 
	{
		pm_objDS = new DS_GD_DELIVERY_ORDER();
		pm_strTableName = c_TableName;
		pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
	}

	public US_GD_DELIVERY_ORDER(DataRow i_objDR): this()
	{
		this.DataRow2Me(i_objDR);
	}

	public US_GD_DELIVERY_ORDER(decimal i_dbID) 
	{
		pm_objDS = new DS_GD_DELIVERY_ORDER();
		pm_strTableName = c_TableName;
		IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
		v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
		SqlCommand v_cmdSQL;
		v_cmdSQL = v_objMkCmd.getSelectCmd();
		this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
		pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
	}
#endregion

    #region Addtion Function
    public void InitByDELIVERY_CODE(string  ip_str_delivery_code) 
	{
		pm_objDS = new DS_GD_DELIVERY_ORDER();
		pm_strTableName = c_TableName;
		IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
        v_objMkCmd.AddCondition(GD_DELIVERY_ORDER.DELIVERY_ORDER_CODE, ip_str_delivery_code, eKieuDuLieu.KieuString, eKieuSoSanh.Bang);
		SqlCommand v_cmdSQL;
		v_cmdSQL = v_objMkCmd.getSelectCmd();
		this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
		pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
	}

    public void FillDataset(
        DS_GD_DELIVERY_ORDER op_gd_delivery_order
        , decimal ip_repository_id
        , DateTime ip_from_date
        , DateTime ip_to_date
        , string ip_str_in_out_yn)
    {
        CStoredProc v_obj_pr = new CStoredProc("pr_GD_DELIVERY_ORDER_Select");
        
        v_obj_pr.addDatetimeInputParam("@ip_from_date", ip_from_date);
        v_obj_pr.addDatetimeInputParam("@ip_to_date", ip_to_date);
        v_obj_pr.addDecimalInputParam("@REPOSITORY_ID", ip_repository_id);
        v_obj_pr.addNVarcharInputParam("@IN_OUT_YN", ip_str_in_out_yn);
        v_obj_pr.fillDataSetByCommand(this, op_gd_delivery_order);
    }
#endregion

  }
}
