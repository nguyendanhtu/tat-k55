///************************************************
/// Generated by: tund
/// Date: 19/08/2011 01:19:25
/// Goal: Create User Service Class for DM_UNIT
///************************************************
/// <summary>
/// Create User Service Class for DM_UNIT
/// </summary>


using SaleDS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;


namespace SaleUS
{
public class US_DM_UNIT : US_Object
{
	private const string c_TableName = "DM_UNIT";
#region Public Properties
	public decimal dcID 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["ID"] = value;
		}
	}

	public bool IsIDNull()	{
		return pm_objDR.IsNull("ID");
	}

	public void SetIDNull() {
		pm_objDR["ID"] = System.Convert.DBNull;
	}

	public string strUNIT_CODE 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "UNIT_CODE", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["UNIT_CODE"] = value;
		}
	}

	public bool IsUNIT_CODENull() 
	{
		return pm_objDR.IsNull("UNIT_CODE");
	}

	public void SetUNIT_CODENull() {
		pm_objDR["UNIT_CODE"] = System.Convert.DBNull;
	}

	public string strDESCRIPTION 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "DESCRIPTION", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["DESCRIPTION"] = value;
		}
	}

	public bool IsDESCRIPTIONNull() 
	{
		return pm_objDR.IsNull("DESCRIPTION");
	}

	public void SetDESCRIPTIONNull() {
		pm_objDR["DESCRIPTION"] = System.Convert.DBNull;
	}

#endregion


#region Init Functions
	public US_DM_UNIT() 
	{
		pm_objDS = new DS_DM_UNIT();
		pm_strTableName = c_TableName;
		pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
	}

	public US_DM_UNIT(DataRow i_objDR): this()
	{
		this.DataRow2Me(i_objDR);
	}

	public US_DM_UNIT(decimal i_dbID) 
	{
		pm_objDS = new DS_DM_UNIT();
		pm_strTableName = c_TableName;
		IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
		v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
		SqlCommand v_cmdSQL;
		v_cmdSQL = v_objMkCmd.getSelectCmd();
		this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
		pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
	}
#endregion


  }
}
