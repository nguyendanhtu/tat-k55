///************************************************
/// Generated by: tund
/// Date: 15/08/2011 11:14:23
/// Goal: Create User Service Class for DM_CATEGORY
///************************************************
/// <summary>
/// Create User Service Class for DM_CATEGORY
/// </summary>


using SaleDS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;

namespace SaleUS
{
    public class US_DM_CATEGORY : US_Object
    {
        private const string c_TableName = "DM_CATEGORY";
        #region Public Properties
        public decimal dcID
        {
            get
            {
                return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
            }
            set
            {
                pm_objDR["ID"] = value;
            }
        }

        public bool IsIDNull()
        {
            return pm_objDR.IsNull("ID");
        }

        public void SetIDNull()
        {
            pm_objDR["ID"] = System.Convert.DBNull;
        }

        public string strCATEGORY_CODE
        {
            get
            {
                return CNull.RowNVLString(pm_objDR, "CATEGORY_CODE", IPConstants.c_DefaultString);
            }
            set
            {
                pm_objDR["CATEGORY_CODE"] = value;
            }
        }

        public bool IsCATEGORY_CODENull()
        {
            return pm_objDR.IsNull("CATEGORY_CODE");
        }

        public void SetCATEGORY_CODENull()
        {
            pm_objDR["CATEGORY_CODE"] = System.Convert.DBNull;
        }

        public string strCATEGORY_NAME
        {
            get
            {
                return CNull.RowNVLString(pm_objDR, "CATEGORY_NAME", IPConstants.c_DefaultString);
            }
            set
            {
                pm_objDR["CATEGORY_NAME"] = value;
            }
        }

        public bool IsCATEGORY_NAMENull()
        {
            return pm_objDR.IsNull("CATEGORY_NAME");
        }

        public void SetCATEGORY_NAMENull()
        {
            pm_objDR["CATEGORY_NAME"] = System.Convert.DBNull;
        }

        public decimal dcCATEGORY_PARENT_ID
        {
            get
            {
                return CNull.RowNVLDecimal(pm_objDR, "CATEGORY_PARENT_ID", IPConstants.c_DefaultDecimal);
            }
            set
            {
                pm_objDR["CATEGORY_PARENT_ID"] = value;
            }
        }

        public bool IsCATEGORY_PARENT_IDNull()
        {
            return pm_objDR.IsNull("CATEGORY_PARENT_ID");
        }

        public void SetCATEGORY_PARENT_IDNull()
        {
            pm_objDR["CATEGORY_PARENT_ID"] = System.Convert.DBNull;
        }

        public decimal dcDISPLAY_ORDER
        {
            get
            {
                return CNull.RowNVLDecimal(pm_objDR, "DISPLAY_ORDER", IPConstants.c_DefaultDecimal);
            }
            set
            {
                pm_objDR["DISPLAY_ORDER"] = value;
            }
        }

        public bool IsDISPLAY_ORDERNull()
        {
            return pm_objDR.IsNull("DISPLAY_ORDER");
        }

        public void SetDISPLAY_ORDERNull()
        {
            pm_objDR["DISPLAY_ORDER"] = System.Convert.DBNull;
        }

        public decimal dcDISPLAY_LEVEL
        {
            get
            {
                return CNull.RowNVLDecimal(pm_objDR, "DISPLAY_LEVEL", IPConstants.c_DefaultDecimal);
            }
            set
            {
                pm_objDR["DISPLAY_LEVEL"] = value;
            }
        }

        public bool IsDISPLAY_LEVELNull()
        {
            return pm_objDR.IsNull("DISPLAY_LEVEL");
        }

        public void SetDISPLAY_LEVELNull()
        {
            pm_objDR["DISPLAY_LEVEL"] = System.Convert.DBNull;
        }

        public string strCATEGORY_DESCRIPTION
        {
            get
            {
                return CNull.RowNVLString(pm_objDR, "CATEGORY_DESCRIPTION", IPConstants.c_DefaultString);
            }
            set
            {
                pm_objDR["CATEGORY_DESCRIPTION"] = value;
            }
        }

        public bool IsCATEGORY_DESCRIPTIONNull()
        {
            return pm_objDR.IsNull("CATEGORY_DESCRIPTION");
        }

        public void SetCATEGORY_DESCRIPTIONNull()
        {
            pm_objDR["CATEGORY_DESCRIPTION"] = System.Convert.DBNull;
        }

        #endregion
        #region Init Functions
        public US_DM_CATEGORY()
        {
            pm_objDS = new DS_DM_CATEGORY();
            pm_strTableName = c_TableName;
            pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
        }

        public US_DM_CATEGORY(DataRow i_objDR)
            : this()
        {
            this.DataRow2Me(i_objDR);
        }

        public US_DM_CATEGORY(decimal i_dbID)
        {
            pm_objDS = new DS_DM_CATEGORY();
            pm_strTableName = c_TableName;
            IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
            v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
            SqlCommand v_cmdSQL;
            v_cmdSQL = v_objMkCmd.getSelectCmd();
            this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
            pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
        }
        #endregion
    }
}